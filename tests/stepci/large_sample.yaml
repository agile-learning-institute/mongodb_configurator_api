name: mongodb_api_large_sample
version: "1.0"
env:
  host: localhost:8081

tests:
  collections:
    name: Collection Processing
    steps:
      - name: Process A Collection
        http:
          url: http://${{env.host}}/api/collections/user
          method: POST
          headers:
            Content-Type: application/json          
          check:
            status: /200/
      - name: Process All Collections
        http:
          url: http://${{env.host}}/api/collections/
          method: POST
          headers:
            Content-Type: application/json          
          check:
            status: /200/
      - name: List Collections
        http:
          url: http://${{env.host}}/api/collections/
          method: GET
          check:
            status: /200/
            jsonpath:
              media: "media.1.0.0.1"
              organization: "organization.1.0.0.1"
              search: "search.1.0.1.3"
              user: "user.1.0.1.3"
      - name: GET A Collection
        http:
          url: http://${{env.host}}/api/collections/user
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              name: "user"
              title: "User Collection"
              description: "Collection for managing users"
              versions[0].version: "1.0.0.1"
              versions[0].test_data: "user.1.0.0.1.json"
              versions[0].add_indexes[0].name: "nameIndex"
              versions[0].add_indexes[0].key.userName: 1
              versions[0].add_indexes[0].options.unique: true
              versions[0].add_indexes[1].name: "statusIndex"
              versions[0].add_indexes[1].key.status: 1
              versions[0].add_indexes[1].options.unique: false
              versions[0].add_indexes[2].name: "savedIndex"
              versions[0].add_indexes[2].key["last_saved.saved_at"]: 1
              versions[0].add_indexes[2].options.unique: false
              versions[1].version: "1.0.0.2"
              versions[1].test_data: "user.1.0.0.2.json"
              versions[1].drop_indexes[0]: "statusIndex"
              versions[2].version: "1.0.1.3"
              versions[2].test_data: "user.1.0.1.3.json"
              versions[2].aggregations[0].name: "merge_name_fields"
              versions[2].aggregations[0].pipeline[0]["$addFields"].full_name["$concat"][0]: "$first_name"
              versions[2].aggregations[0].pipeline[0]["$addFields"].full_name["$concat"][1]: " "
              versions[2].aggregations[0].pipeline[0]["$addFields"].full_name["$concat"][2]: "$last_name"
              versions[2].aggregations[0].pipeline[1]["$unset"][0]: "first_name"
              versions[2].aggregations[0].pipeline[1]["$unset"][1]: "last_name"
              versions[2].aggregations[0].pipeline[2]["$out"]: "user"
  bson:
    name: Render BSON Schemas
    steps:
      - name: Render User BSON Schema
        http:
          url: http://${{env.host}}/api/render/bson_schema/user.1.0.0.1
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              title: "User Collection"
              description: "A user collection for testing the schema system"
              bsonType: "object"
              additionalProperties: false
              properties._id.bsonType: "objectId"
              properties._id.description: "The unique identifier for a user"
              properties.user_name.bsonType: "string"
              properties.user_name.description: "Username"
              properties.user_name.pattern: "^[^\\s]{4,40}$"
              properties.first_name.bsonType: "string"
              properties.first_name.description: "Users First Name"
              properties.first_name.pattern: "^[^\\s]{4,40}$"
              properties.last_name.bsonType: "string"
              properties.last_name.description: "Users Last Name"
              properties.last_name.pattern: "^[^\\s]{4,40}$"
              properties.status.bsonType: "string"
              properties.status.description: "document status"
              properties.status.enum[0]: "active"
              properties.status.enum[1]: "archived"
              properties.last_saved.bsonType: "object"
              properties.last_saved.title: "Breadcrumb"
              properties.last_saved.description: "The last time this document was saved"
              properties.last_saved.additionalProperties: false
              properties.last_saved.properties.from_ip.bsonType: "string"
              properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.by_user.bsonType: "string"
              properties.last_saved.properties.by_user.description: "ID Of User"
              properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.at_time.bsonType: "date"
              properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.last_saved.properties.correlation_id.bsonType: "string"
              properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.required[0]: "from_ip"
              properties.last_saved.required[1]: "by_user"
              properties.last_saved.required[2]: "at_time"
              properties.last_saved.required[3]: "correlation_id"
              required[0]: "_id"
              required[1]: "user_name"
              required[2]: "status"
              required[3]: "last_saved"
      - name: Render media BSON Schema
        http:
          url: http://${{env.host}}/api/render/bson_schema/media.1.0.0.1
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              title: "Media"
              description: "A media item in the system"
              bsonType: "object"
              additionalProperties: false
              properties._id.bsonType: "objectId"
              properties._id.description: "The unique identifier for the media"
              properties.title.bsonType: "string"
              properties.title.description: "The title of the media"
              properties.title.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.status.bsonType: "string"
              properties.status.description: "The current status of the media"
              properties.status.enum[0]: "draft"
              properties.status.enum[1]: "published"
              properties.status.enum[2]: "archived"
              properties.type.bsonType: "string"
              properties.type.description: "The type of media"
              properties.type.enum[0]: "movie"
              properties.type.enum[1]: "tv_show"
              properties.type.enum[2]: "documentary"
              properties.type.enum[3]: "short"
              properties.tags.bsonType: "array"
              properties.tags.description: "Tags associated with the media"
              properties.tags.items.enum[0]: "action"
              properties.tags.items.enum[1]: "comedy"
              properties.tags.items.enum[2]: "drama"
              properties.tags.items.enum[3]: "sci_fi"
              properties.tags.items.enum[4]: "documentary"
              properties.metadata.bsonType: "object"
              properties.metadata.description: "Additional metadata about the media"
              properties.metadata.additionalProperties: false
              properties.metadata.properties.duration.bsonType: "int"
              properties.metadata.properties.duration.description: "Duration in minutes"
              properties.metadata.properties.duration.minimum: 1
              properties.metadata.properties.format.bsonType: "string"
              properties.metadata.properties.format.description: "Media format"
              properties.metadata.properties.format.enum[0]: "dvd"
              properties.metadata.properties.format.enum[1]: "bluray"
              properties.metadata.properties.format.enum[2]: "digital"
              properties.metadata.properties.format.enum[3]: "streaming"
              properties.metadata.properties.quality.bsonType: "string"
              properties.metadata.properties.quality.description: "Quality rating"
              properties.metadata.properties.quality.enum[0]: "sd"
              properties.metadata.properties.quality.enum[1]: "hd"
              properties.metadata.properties.quality.enum[2]: "uhd"
              properties.last_saved.bsonType: "object"
              properties.last_saved.title: "Breadcrumb"
              properties.last_saved.description: "When the media was last updated"
              properties.last_saved.additionalProperties: false
              properties.last_saved.properties.from_ip.bsonType: "string"
              properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.by_user.bsonType: "string"
              properties.last_saved.properties.by_user.description: "ID Of User"
              properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.at_time.bsonType: "date"
              properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.last_saved.properties.correlation_id.bsonType: "string"
              properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.required[0]: "from_ip"
              properties.last_saved.required[1]: "by_user"
              properties.last_saved.required[2]: "at_time"
              properties.last_saved.required[3]: "correlation_id"
              required[0]: "_id"
              required[1]: "title"
              required[2]: "status"
              required[3]: "last_saved"
      - name: Render organization BSON Schema
        http:
          url: http://${{env.host}}/api/render/bson_schema/organization.1.0.0.1
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              title: "Organization"
              description: "An organization in the system"
              bsonType: "object"
              additionalProperties: false
              properties._id.bsonType: "objectId"
              properties._id.description: "The unique identifier for the organization"
              properties.name.bsonType: "string"
              properties.name.description: "The organization name"
              properties.name.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.status.bsonType: "string"
              properties.status.description: "The current status of the organization"
              properties.status.enum[0]: "active"
              properties.status.enum[1]: "archived"
              properties.website.bsonType: "string"
              properties.website.description: "Organization website"
              properties.website.pattern: "^https?://[\\w\\d\\-]+(\\.[\\w\\d\\-]+)+([\\w\\d\\-._~:/?#\\[\\]@!$&'()*+,;=]*)?$"
              properties.users.bsonType: "array"
              properties.users.description: "Users associated with this organization"
              properties.users.items.bsonType: "objectId"
              properties.users.items.description: "A user identifier"
              properties.home_address.bsonType: "object"
              properties.home_address.title: "Street Address"
              properties.home_address.description: "Organization home address"
              properties.home_address.additionalProperties: false
              properties.home_address.properties.street.bsonType: "string"
              properties.home_address.properties.street.description: "Street address"
              properties.home_address.properties.street.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.home_address.properties.city.bsonType: "string"
              properties.home_address.properties.city.description: "City"
              properties.home_address.properties.city.pattern: "^[^\\s]{4,40}$"
              properties.home_address.properties.state.bsonType: "string"
              properties.home_address.properties.state.description: "State or province"
              properties.home_address.properties.state.pattern: "^[A-Z]{2}$"
              properties.home_address.properties.postal_code.bsonType: "string"
              properties.home_address.properties.postal_code.description: "Postal code"
              properties.home_address.properties.postal_code.pattern: "^[^\\s]{4,40}$"
              properties.home_address.required[0]: "postal_code"
              properties.last_saved.bsonType: "object"
              properties.last_saved.title: "Breadcrumb"
              properties.last_saved.description: "When the organization document was last updated"
              properties.last_saved.additionalProperties: false
              properties.last_saved.properties.from_ip.bsonType: "string"
              properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.by_user.bsonType: "string"
              properties.last_saved.properties.by_user.description: "ID Of User"
              properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.at_time.bsonType: "date"
              properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.last_saved.properties.correlation_id.bsonType: "string"
              properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.required[0]: "from_ip"
              properties.last_saved.required[1]: "by_user"
              properties.last_saved.required[2]: "at_time"
              properties.last_saved.required[3]: "correlation_id"
              required[0]: "_id"
              required[1]: "name"
              required[2]: "status"
              required[3]: "last_saved"
      - name: Render Search BSON Schema
        http:
          url: http://${{env.host}}/api/render/bson_schema/search.1.0.0.1
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              title: "search"
              description: "A search index that is used to support a elastic search polymorphic query service"
              bsonType: "object"
              additionalProperties: false
              properties.collection_name.bsonType: "string"
              properties.collection_name.description: "The name of the collection"
              properties.collection_name.pattern: "^[^\\s]{4,40}$"
              properties.collection_id.bsonType: "objectId"
              properties.collection_id.description: "The unique identifier for this source document"
              properties.media.bsonType: "object"
              properties.media.title: "Media"
              properties.media.description: "A media item in the system"
              properties.media.additionalProperties: false
              properties.media.properties._id.bsonType: "objectId"
              properties.media.properties._id.description: "The unique identifier for the media"
              properties.media.properties.title.bsonType: "string"
              properties.media.properties.title.description: "The title of the media"
              properties.media.properties.title.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.media.properties.status.bsonType: "string"
              properties.media.properties.status.description: "The current status of the media"
              properties.media.properties.status.enum[0]: "draft"
              properties.media.properties.status.enum[1]: "published"
              properties.media.properties.status.enum[2]: "archived"
              properties.media.properties.type.bsonType: "string"
              properties.media.properties.type.description: "The type of media"
              properties.media.properties.type.enum[0]: "movie"
              properties.media.properties.type.enum[1]: "tv_show"
              properties.media.properties.type.enum[2]: "documentary"
              properties.media.properties.type.enum[3]: "short"
              properties.media.properties.tags.bsonType: "array"
              properties.media.properties.tags.description: "Tags associated with the media"
              properties.media.properties.tags.items.enum[0]: "action"
              properties.media.properties.tags.items.enum[1]: "comedy"
              properties.media.properties.tags.items.enum[2]: "drama"
              properties.media.properties.tags.items.enum[3]: "sci_fi"
              properties.media.properties.tags.items.enum[4]: "documentary"
              properties.media.properties.metadata.bsonType: "object"
              properties.media.properties.metadata.description: "Additional metadata about the media"
              properties.media.properties.metadata.additionalProperties: false
              properties.media.properties.metadata.properties.duration.bsonType: "int"
              properties.media.properties.metadata.properties.duration.description: "Duration in minutes"
              properties.media.properties.metadata.properties.duration.minimum: 1
              properties.media.properties.metadata.properties.format.bsonType: "string"
              properties.media.properties.metadata.properties.format.description: "Media format"
              properties.media.properties.metadata.properties.format.enum[0]: "dvd"
              properties.media.properties.metadata.properties.format.enum[1]: "bluray"
              properties.media.properties.metadata.properties.format.enum[2]: "digital"
              properties.media.properties.metadata.properties.format.enum[3]: "streaming"
              properties.media.properties.metadata.properties.quality.bsonType: "string"
              properties.media.properties.metadata.properties.quality.description: "Quality rating"
              properties.media.properties.metadata.properties.quality.enum[0]: "sd"
              properties.media.properties.metadata.properties.quality.enum[1]: "hd"
              properties.media.properties.metadata.properties.quality.enum[2]: "uhd"
              properties.media.properties.last_saved.bsonType: "object"
              properties.media.properties.last_saved.title: "Breadcrumb"
              properties.media.properties.last_saved.description: "When the media was last updated"
              properties.media.properties.last_saved.additionalProperties: false
              properties.media.properties.last_saved.properties.from_ip.bsonType: "string"
              properties.media.properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.media.properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.media.properties.last_saved.properties.by_user.bsonType: "string"
              properties.media.properties.last_saved.properties.by_user.description: "ID Of User"
              properties.media.properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.media.properties.last_saved.properties.at_time.bsonType: "date"
              properties.media.properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.media.properties.last_saved.properties.correlation_id.bsonType: "string"
              properties.media.properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.media.properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.media.properties.last_saved.required[0]: "from_ip"
              properties.media.properties.last_saved.required[1]: "by_user"
              properties.media.properties.last_saved.required[2]: "at_time"
              properties.media.properties.last_saved.required[3]: "correlation_id"
              properties.media.required[0]: "_id"
              properties.media.required[1]: "title"
              properties.media.required[2]: "status"
              properties.media.required[3]: "last_saved"
              properties.organization.bsonType: "object"
              properties.organization.title: "Organization"
              properties.organization.description: "An organization in the system"
              properties.organization.additionalProperties: false
              properties.organization.properties._id.bsonType: "objectId"
              properties.organization.properties._id.description: "The unique identifier for the organization"
              properties.organization.properties.name.bsonType: "string"
              properties.organization.properties.name.description: "The organization name"
              properties.organization.properties.name.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.organization.properties.status.bsonType: "string"
              properties.organization.properties.status.description: "The current status of the organization"
              properties.organization.properties.status.enum[0]: "active"
              properties.organization.properties.status.enum[1]: "archived"
              properties.organization.properties.website.bsonType: "string"
              properties.organization.properties.website.description: "Organization website"
              properties.organization.properties.website.pattern: "^https?://[\\w\\d\\-]+(\\.[\\w\\d\\-]+)+([\\w\\d\\-._~:/?#\\[\\]@!$&'()*+,;=]*)?$"
              properties.organization.properties.users.bsonType: "array"
              properties.organization.properties.users.description: "Users associated with this organization"
              properties.organization.properties.users.items.bsonType: "objectId"
              properties.organization.properties.users.items.description: "A user identifier"
              properties.organization.properties.home_address.bsonType: "object"
              properties.organization.properties.home_address.title: "Street Address"
              properties.organization.properties.home_address.description: "Organization home address"
              properties.organization.properties.home_address.additionalProperties: false
              properties.organization.properties.home_address.properties.street.bsonType: "string"
              properties.organization.properties.home_address.properties.street.description: "Street address"
              properties.organization.properties.home_address.properties.street.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.organization.properties.home_address.properties.city.bsonType: "string"
              properties.organization.properties.home_address.properties.city.description: "City"
              properties.organization.properties.home_address.properties.city.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.home_address.properties.state.bsonType: "string"
              properties.organization.properties.home_address.properties.state.description: "State or province"
              properties.organization.properties.home_address.properties.state.pattern: "^[A-Z]{2}$"
              properties.organization.properties.home_address.properties.postal_code.bsonType: "string"
              properties.organization.properties.home_address.properties.postal_code.description: "Postal code"
              properties.organization.properties.home_address.properties.postal_code.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.home_address.required[0]: "postal_code"
              properties.organization.properties.last_saved.bsonType: "object"
              properties.organization.properties.last_saved.title: "Breadcrumb"
              properties.organization.properties.last_saved.description: "When the organization document was last updated"
              properties.organization.properties.last_saved.additionalProperties: false
              properties.organization.properties.last_saved.properties.from_ip.bsonType: "string"
              properties.organization.properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.organization.properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.last_saved.properties.by_user.bsonType: "string"
              properties.organization.properties.last_saved.properties.by_user.description: "ID Of User"
              properties.organization.properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.last_saved.properties.at_time.bsonType: "date"
              properties.organization.properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.organization.properties.last_saved.properties.correlation_id.bsonType: "string"
              properties.organization.properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.organization.properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.last_saved.required[0]: "from_ip"
              properties.organization.properties.last_saved.required[1]: "by_user"
              properties.organization.properties.last_saved.required[2]: "at_time"
              properties.organization.properties.last_saved.required[3]: "correlation_id"
              properties.organization.required[0]: "_id"
              properties.organization.required[1]: "name"
              properties.organization.required[2]: "status"
              properties.organization.required[3]: "last_saved"
              properties.user.bsonType: "object"
              properties.user.title: "User Collection"
              properties.user.description: "A user collection for testing the schema system"
              properties.user.additionalProperties: false
              properties.user.properties._id.bsonType: "objectId"
              properties.user.properties._id.description: "The unique identifier for a user"
              properties.user.properties.user_name.bsonType: "string"
              properties.user.properties.user_name.description: "Username"
              properties.user.properties.user_name.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.first_name.bsonType: "string"
              properties.user.properties.first_name.description: "Users First Name"
              properties.user.properties.first_name.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_name.bsonType: "string"
              properties.user.properties.last_name.description: "Users Last Name"
              properties.user.properties.last_name.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.status.bsonType: "string"
              properties.user.properties.status.description: "document status"
              properties.user.properties.status.enum[0]: "active"
              properties.user.properties.status.enum[1]: "archived"
              properties.user.properties.last_saved.bsonType: "object"
              properties.user.properties.last_saved.title: "Breadcrumb"
              properties.user.properties.last_saved.description: "The last time this document was saved"
              properties.user.properties.last_saved.additionalProperties: false
              properties.user.properties.last_saved.properties.from_ip.bsonType: "string"
              properties.user.properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.user.properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_saved.properties.by_user.bsonType: "string"
              properties.user.properties.last_saved.properties.by_user.description: "ID Of User"
              properties.user.properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_saved.properties.at_time.bsonType: "date"
              properties.user.properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.user.properties.last_saved.properties.correlation_id.bsonType: "string"
              properties.user.properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.user.properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_saved.required[0]: "from_ip"
              properties.user.properties.last_saved.required[1]: "by_user"
              properties.user.properties.last_saved.required[2]: "at_time"
              properties.user.properties.last_saved.required[3]: "correlation_id"
              properties.user.required[0]: "_id"
              properties.user.required[1]: "user_name"
              properties.user.required[2]: "status"
              properties.user.required[3]: "last_saved"
              required[0]: "collection_name"
              required[1]: "collection_id"
  json:
    name: Render JSON Schemas
    steps:
      - name: Render User JSON Schema
        http:
          url: http://${{env.host}}/api/render/json_schema/user.1.0.1.3
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              title: "User Collection"
              description: "A user collection for testing the schema system"
              type: "object"
              additionalProperties: false
              properties._id.type: "string"
              properties._id.description: "The unique identifier for a user"
              properties._id.pattern: "^[0-9a-fA-F]{24}$"
              properties.user_name.type: "string"
              properties.user_name.description: "Username"
              properties.user_name.pattern: "^[^\\s]{4,40}$"
              properties.status.type: "string"
              properties.status.description: "The status"
              properties.status.enum[0]: "draft"
              properties.status.enum[1]: "active"
              properties.status.enum[2]: "archived"
              properties.full_name.type: "string"
              properties.full_name.description: "Users Full Name"
              properties.full_name.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.email.type: "string"
              properties.email.description: "The person's email address"
              properties.email.pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
              properties.phone.type: "string"
              properties.phone.description: "The person's phone number"
              properties.phone.pattern: "^\\+1[2-9][0-9]{9}$"
              properties.categories.type: "array"
              properties.categories.description: "A users list of categorized tags"
              properties.categories.items.type: "object"
              properties.categories.items.description: "A user category"
              properties.categories.items.additionalProperties: false
              properties.categories.items.properties.name.type: "string"
              properties.categories.items.properties.name.description: "Category Name assigned by the user"
              properties.categories.items.properties.name.pattern: "^[^\\s]{4,40}$"
              properties.categories.items.properties.category.type: "string"
              properties.categories.items.properties.category.description: "The category type assigned by the user"
              properties.categories.items.properties.category.enum[0]: "work"
              properties.categories.items.properties.category.enum[1]: "personal"
              properties.categories.items.properties.category.enum[2]: "project"
              properties.categories.items.properties.category.enum[3]: "reference"
              properties.categories.items.properties.tags.type: "array"
              properties.categories.items.properties.tags.description: "A list of enumerated values assigned by the user"
              properties.categories.items.properties.tags.items.enum[0]: "urgent"
              properties.categories.items.properties.tags.items.enum[1]: "important"
              properties.categories.items.properties.tags.items.enum[2]: "normal"
              properties.categories.items.properties.tags.items.enum[3]: "low"
              properties.categories.items.properties.tags.items.enum[4]: "completed"
              properties.categories.items.properties.tags.items.enum[5]: "in_progress"
              properties.categories.items.properties.tags.items.enum[6]: "blocked"
              properties.categories.items.properties.tags.items.enum[7]: "review"
              properties.categories.items.required[0]: "name"
              properties.categories.items.required[1]: "category"
              properties.categories.items.required[2]: "tags"
              properties.last_saved.type: "object"
              properties.last_saved.title: "Breadcrumb"
              properties.last_saved.description: "The last time this document was saved"
              properties.last_saved.additionalProperties: false
              properties.last_saved.properties.from_ip.type: "string"
              properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.by_user.type: "string"
              properties.last_saved.properties.by_user.description: "ID Of User"
              properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.at_time.type: "string"
              properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.last_saved.properties.at_time.format: "date-time"
              properties.last_saved.properties.correlation_id.type: "string"
              properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.required[0]: "from_ip"
              properties.last_saved.required[1]: "by_user"
              properties.last_saved.required[2]: "at_time"
              properties.last_saved.required[3]: "correlation_id"
              required[0]: "_id"
              required[1]: "user_name"
              required[2]: "status"
              required[3]: "last_saved"
      - name: Render media JSON Schema
        http:
          url: http://${{env.host}}/api/render/json_schema/media.1.0.0.1
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              title: "Media"
              description: "A media item in the system"
              type: "object"
              additionalProperties: false
              properties._id.type: "string"
              properties._id.description: "The unique identifier for the media"
              properties.title.type: "string"
              properties.title.description: "The title of the media"
              properties.title.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.status.type: "string"
              properties.status.description: "The current status of the media"
              properties.status.enum[0]: "draft"
              properties.status.enum[1]: "published"
              properties.status.enum[2]: "archived"
              properties.type.type: "string"
              properties.type.description: "The type of media"
              properties.type.enum[0]: "movie"
              properties.type.enum[1]: "tv_show"
              properties.type.enum[2]: "documentary"
              properties.type.enum[3]: "short"
              properties.tags.type: "array"
              properties.tags.description: "Tags associated with the media"
              properties.tags.items.enum[0]: "action"
              properties.tags.items.enum[1]: "comedy"
              properties.tags.items.enum[2]: "drama"
              properties.tags.items.enum[3]: "sci_fi"
              properties.tags.items.enum[4]: "documentary"
              properties.metadata.type: "object"
              properties.metadata.description: "Additional metadata about the media"
              properties.metadata.additionalProperties: false
              properties.metadata.properties.duration.type: "number"
              properties.metadata.properties.duration.description: "Duration in minutes"
              properties.metadata.properties.duration.minimum: 1
              properties.metadata.properties.duration.multipleOf: 1
              properties.metadata.properties.format.type: "string"
              properties.metadata.properties.format.description: "Media format"
              properties.metadata.properties.format.enum[0]: "dvd"
              properties.metadata.properties.format.enum[1]: "bluray"
              properties.metadata.properties.format.enum[2]: "digital"
              properties.metadata.properties.format.enum[3]: "streaming"
              properties.metadata.properties.quality.type: "string"
              properties.metadata.properties.quality.description: "Quality rating"
              properties.metadata.properties.quality.enum[0]: "sd"
              properties.metadata.properties.quality.enum[1]: "hd"
              properties.metadata.properties.quality.enum[2]: "uhd"
              properties.last_saved.type: "object"
              properties.last_saved.title: "Breadcrumb"
              properties.last_saved.description: "When the media was last updated"
              properties.last_saved.additionalProperties: false
              properties.last_saved.properties.from_ip.type: "string"
              properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.by_user.type: "string"
              properties.last_saved.properties.by_user.description: "ID Of User"
              properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.properties.at_time.type: "string"
              properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.last_saved.properties.at_time.format: "date-time"
              properties.last_saved.properties.correlation_id.type: "string"
              properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.last_saved.required[0]: "from_ip"
              properties.last_saved.required[1]: "by_user"
              properties.last_saved.required[2]: "at_time"
              properties.last_saved.required[3]: "correlation_id"
      - name: Render organization JSON Schema
        http:
          url: http://${{env.host}}/api/render/json_schema/organization.1.0.0.1
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            # jsonpath:
            #   title: "Organization"
            #   description: "An organization in the system"
            #   type: "object"
            #   additionalProperties: false
            #   properties._id.type: "string"
            #   properties._id.description: "The unique identifier for the organization"
            #   properties._id.pattern: "^[0-9a-fA-F]{24}$"
            #   properties.name.type: "string"
            #   properties.name.description: "The organization name"
            #   properties.name.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
            #   properties.status.type: "string"
            #   properties.status.description: "The current status of the organization"
            #   properties.status.enum[0]: "active"
            #   properties.status.enum[1]: "archived"
            #   properties.website.type: "string"
            #   properties.website.description: "Organization website"
            #   properties.website.pattern: "^https?://[\\w\\d\\-]+(\\.[\\w\\d\\-]+)+([\\w\\d\\-._~:/?#\\[\\]@!$&'()*+,;=]*)?$"
            #   properties.users.type: "array"
            #   properties.users.description: "Users associated with this organization"
            #   properties.users.items.type: "string"
            #   properties.users.items.description: "A user identifier"
            #   properties.users.items.pattern: "^[0-9a-fA-F]{24}$"
            #   properties.home_address.type: "object"
            #   properties.home_address.title: "Street Address"
            #   properties.home_address.description: "Organization home address"
            #   properties.home_address.additionalProperties: false
            #   properties.home_address.properties.street.type: "string"
            #   properties.home_address.properties.street.description: "Street address"
            #   properties.home_address.properties.street.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
            #   properties.home_address.properties.city.type: "string"
            #   properties.home_address.properties.city.description: "City"
            #   properties.home_address.properties.city.pattern: "^[^\\s]{4,40}$"
            #   properties.home_address.properties.state.type: "string"
            #   properties.home_address.properties.state.description: "State or province"
            #   properties.home_address.properties.state.pattern: "^[A-Z]{2}$"
            #   properties.home_address.properties.postal_code.type: "string"
            #   properties.home_address.properties.postal_code.description: "Postal code"
            #   properties.home_address.properties.postal_code.pattern: "^[^\\s]{4,40}$"
            #   properties.home_address.required[0]: "postal_code"
            #   properties.last_saved.type: "object"
            #   properties.last_saved.title: "Breadcrumb"
            #   properties.last_saved.description: "When the organization document was last updated"
            #   properties.last_saved.additionalProperties: false
            #   properties.last_saved.properties.from_ip.type: "string"
            #   properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
            #   properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
            #   properties.last_saved.properties.by_user.type: "string"
            #   properties.last_saved.properties.by_user.description: "ID Of User"
            #   properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
            #   properties.last_saved.properties.at_time.type: "string"
            #   properties.last_saved.properties.at_time.description: "The date-time when last updated"
            #   properties.last_saved.properties.at_time.format: "date-time"
            #   properties.last_saved.properties.correlation_id.type: "string"
            #   properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
            #   properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
            #   properties.last_saved.required[0]: "from_ip"
            #   properties.last_saved.required[1]: "by_user"
            #   properties.last_saved.required[2]: "at_time"
            #   properties.last_saved.required[3]: "correlation_id"
            #   properties.last_saved.required[0]: "_id"
            #   properties.last_saved.required[1]: "name"
            #   properties.last_saved.required[2]: "status"
            #   properties.last_saved.required[3]: "last_saved"
      - name: Render Search JSON Schema
        http:
          url: http://${{env.host}}/api/render/json_schema/search.1.0.0.1
          method: GET
          headers:
            Content-Type: application/json          
          check:
            status: /200/
            jsonpath:
              title: "search"
              description: "A search index that is used to support a elastic search polymorphic query service"
              type: "object"
              additionalProperties: false
              properties.collection_name.type: "string"
              properties.collection_name.description: "The name of the collection"
              properties.collection_name.pattern: "^[^\\s]{4,40}$"
              properties.collection_id.type: "string"
              properties.collection_id.description: "The unique identifier for this source document"
              properties.collection_id.pattern: "^[0-9a-fA-F]{24}$"
              properties.media.type: "object"
              properties.media.title: "Media"
              properties.media.description: "A media item in the system"
              properties.media.additionalProperties: false
              properties.media.properties._id.type: "string"
              properties.media.properties._id.description: "The unique identifier for the media"
              properties.media.properties._id.pattern: "^[0-9a-fA-F]{24}$"
              properties.media.properties.title.type: "string"
              properties.media.properties.title.description: "The title of the media"
              properties.media.properties.title.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.media.properties.status.type: "string"
              properties.media.properties.status.description: "The current status of the media"
              properties.media.properties.status.enum[0]: "draft"
              properties.media.properties.status.enum[1]: "published"
              properties.media.properties.status.enum[2]: "archived"
              properties.media.properties.type.type: "string"
              properties.media.properties.type.description: "The type of media"
              properties.media.properties.type.enum[0]: "movie"
              properties.media.properties.type.enum[1]: "tv_show"
              properties.media.properties.type.enum[2]: "documentary"
              properties.media.properties.type.enum[3]: "short"
              properties.media.properties.tags.type: "array"
              properties.media.properties.tags.description: "Tags associated with the media"
              properties.media.properties.tags.items.enum[0]: "action"
              properties.media.properties.tags.items.enum[1]: "comedy"
              properties.media.properties.tags.items.enum[2]: "drama"
              properties.media.properties.tags.items.enum[3]: "sci_fi"
              properties.media.properties.tags.items.enum[4]: "documentary"
              properties.media.properties.metadata.type: "object"
              properties.media.properties.metadata.description: "Additional metadata about the media"
              properties.media.properties.metadata.additionalProperties: false
              properties.media.properties.metadata.properties.duration.type: "number"
              properties.media.properties.metadata.properties.duration.description: "Duration in minutes"
              properties.media.properties.metadata.properties.duration.minimum: 1
              properties.media.properties.metadata.properties.duration.multipleOf: 1
              properties.media.properties.metadata.properties.format.type: "string"
              properties.media.properties.metadata.properties.format.description: "Media format"
              properties.media.properties.metadata.properties.format.enum[0]: "dvd"
              properties.media.properties.metadata.properties.format.enum[1]: "bluray"
              properties.media.properties.metadata.properties.format.enum[2]: "digital"
              properties.media.properties.metadata.properties.format.enum[3]: "streaming"
              properties.media.properties.metadata.properties.quality.type: "string"
              properties.media.properties.metadata.properties.quality.description: "Quality rating"
              properties.media.properties.metadata.properties.quality.enum[0]: "sd"
              properties.media.properties.metadata.properties.quality.enum[1]: "hd"
              properties.media.properties.metadata.properties.quality.enum[2]: "uhd"
              properties.media.properties.last_saved.type: "object"
              properties.media.properties.last_saved.title: "Breadcrumb"
              properties.media.properties.last_saved.description: "When the media was last updated"
              properties.media.properties.last_saved.additionalProperties: false
              properties.media.properties.last_saved.properties.from_ip.type: "string"
              properties.media.properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.media.properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.media.properties.last_saved.properties.by_user.type: "string"
              properties.media.properties.last_saved.properties.by_user.description: "ID Of User"
              properties.media.properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.media.properties.last_saved.properties.at_time.type: "string"
              properties.media.properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.media.properties.last_saved.properties.at_time.format: "date-time"
              properties.media.properties.last_saved.properties.correlation_id.type: "string"
              properties.media.properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.media.properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.media.properties.last_saved.required[0]: "from_ip"
              properties.media.properties.last_saved.required[1]: "by_user"
              properties.media.properties.last_saved.required[2]: "at_time"
              properties.media.properties.last_saved.required[3]: "correlation_id"
              properties.media.required[0]: "_id"
              properties.media.required[1]: "title"
              properties.media.required[2]: "status"
              properties.media.required[3]: "last_saved"
              properties.organization.type: "object"
              properties.organization.title: "Organization"
              properties.organization.description: "An organization in the system"
              properties.organization.additionalProperties: false
              properties.organization.properties._id.type: "string"
              properties.organization.properties._id.description: "The unique identifier for the organization"
              properties.organization.properties._id.pattern: "^[0-9a-fA-F]{24}$"
              properties.organization.properties.name.type: "string"
              properties.organization.properties.name.description: "The organization name"
              properties.organization.properties.name.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.organization.properties.status.type: "string"
              properties.organization.properties.status.description: "The current status of the organization"
              properties.organization.properties.status.enum[0]: "active"
              properties.organization.properties.status.enum[1]: "archived"
              properties.organization.properties.website.type: "string"
              properties.organization.properties.website.description: "Organization website"
              properties.organization.properties.website.pattern: "^https?://[\\w\\d\\-]+(\\.[\\w\\d\\-]+)+([\\w\\d\\-._~:/?#\\[\\]@!$&'()*+,;=]*)?$"
              properties.organization.properties.users.type: "array"
              properties.organization.properties.users.description: "Users associated with this organization"
              properties.organization.properties.users.items.type: "string"
              properties.organization.properties.users.items.description: "A user identifier"
              properties.organization.properties.users.items.pattern: "^[0-9a-fA-F]{24}$"
              properties.organization.properties.home_address.type: "object"
              properties.organization.properties.home_address.title: "Street Address"
              properties.organization.properties.home_address.description: "Organization home address"
              properties.organization.properties.home_address.additionalProperties: false
              properties.organization.properties.home_address.properties.street.type: "string"
              properties.organization.properties.home_address.properties.street.description: "Street address"
              properties.organization.properties.home_address.properties.street.pattern: "^[a-zA-Z0-9\\s.,!?-]{4,255}$"
              properties.organization.properties.home_address.properties.city.type: "string"
              properties.organization.properties.home_address.properties.city.description: "City"
              properties.organization.properties.home_address.properties.city.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.home_address.properties.state.type: "string"
              properties.organization.properties.home_address.properties.state.description: "State or province"
              properties.organization.properties.home_address.properties.state.pattern: "^[A-Z]{2}$"
              properties.organization.properties.home_address.properties.postal_code.type: "string"
              properties.organization.properties.home_address.properties.postal_code.description: "Postal code"
              properties.organization.properties.home_address.properties.postal_code.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.home_address.required[0]: "postal_code"
              properties.organization.properties.last_saved.type: "object"
              properties.organization.properties.last_saved.title: "Breadcrumb"
              properties.organization.properties.last_saved.description: "When the organization document was last updated"
              properties.organization.properties.last_saved.additionalProperties: false
              properties.organization.properties.last_saved.properties.from_ip.type: "string"
              properties.organization.properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.organization.properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.last_saved.properties.by_user.type: "string"
              properties.organization.properties.last_saved.properties.by_user.description: "ID Of User"
              properties.organization.properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.last_saved.properties.at_time.type: "string"
              properties.organization.properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.organization.properties.last_saved.properties.at_time.format: "date-time"
              properties.organization.properties.last_saved.properties.correlation_id.type: "string"
              properties.organization.properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.organization.properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.organization.properties.last_saved.required[0]: "from_ip"
              properties.organization.properties.last_saved.required[1]: "by_user"
              properties.organization.properties.last_saved.required[2]: "at_time"
              properties.organization.properties.last_saved.required[3]: "correlation_id"
              properties.organization.required[0]: "_id"
              properties.organization.required[1]: "name"
              properties.organization.required[2]: "status"
              properties.organization.required[3]: "last_saved"
              properties.user.type: "object"
              properties.user.title: "User Collection"
              properties.user.description: "A user collection for testing the schema system"
              properties.user.additionalProperties: false
              properties.user.properties._id.type: "string"
              properties.user.properties._id.description: "The unique identifier for a user"
              properties.user.properties._id.pattern: "^[0-9a-fA-F]{24}$"
              properties.user.properties.user_name.type: "string"
              properties.user.properties.user_name.description: "Username"
              properties.user.properties.user_name.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.first_name.type: "string"
              properties.user.properties.first_name.description: "Users First Name"
              properties.user.properties.first_name.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_name.type: "string"
              properties.user.properties.last_name.description: "Users Last Name"
              properties.user.properties.last_name.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.status.type: "string"
              properties.user.properties.status.description: "document status"
              properties.user.properties.status.enum[0]: "active"
              properties.user.properties.status.enum[1]: "archived"
              properties.user.properties.last_saved.type: "object"
              properties.user.properties.last_saved.title: "Breadcrumb"
              properties.user.properties.last_saved.description: "The last time this document was saved"
              properties.user.properties.last_saved.additionalProperties: false
              properties.user.properties.last_saved.properties.from_ip.type: "string"
              properties.user.properties.last_saved.properties.from_ip.description: "Http Request remote IP address"
              properties.user.properties.last_saved.properties.from_ip.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_saved.properties.by_user.type: "string"
              properties.user.properties.last_saved.properties.by_user.description: "ID Of User"
              properties.user.properties.last_saved.properties.by_user.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_saved.properties.at_time.type: "string"
              properties.user.properties.last_saved.properties.at_time.description: "The date-time when last updated"
              properties.user.properties.last_saved.properties.at_time.format: "date-time"
              properties.user.properties.last_saved.properties.correlation_id.type: "string"
              properties.user.properties.last_saved.properties.correlation_id.description: "The logging correlation ID of the update transaction"
              properties.user.properties.last_saved.properties.correlation_id.pattern: "^[^\\s]{4,40}$"
              properties.user.properties.last_saved.required[0]: "from_ip"
              properties.user.properties.last_saved.required[1]: "by_user"
              properties.user.properties.last_saved.required[2]: "at_time"
              properties.user.properties.last_saved.required[3]: "correlation_id"
              properties.user.required[0]: "_id"
              properties.user.required[1]: "user_name"
              properties.user.required[2]: "status"
              properties.user.required[3]: "last_saved"
              required[0]: "collection_name"
              required[1]: "collection_id"
