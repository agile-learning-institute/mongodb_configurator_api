version: "1.1"
name: Test Configurations Endpoints
env:
  host: localhost:8081

tests:
  configurations:
    name: Test Configurations Endpoints
    steps:
      # Setup - Delete test file if it exists (no checks needed)
      - name: Delete Test Configuration (Setup)
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: DELETE
          check:
            status: /200|500/
      
      # Create - PUT new configuration
      - name: Create Test Configuration
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: PUT
          headers:
            Content-Type: application/json
          body: |
            {
              "description": "Test collection for stepCI testing",
              "versions": [
                {
                  "version": "1.0.0.1",
                  "drop_indexes": [],
                  "migrations": [],
                  "add_indexes": [],
                  "test_data": "test_data.1.0.0.1.json"
                }
              ]
            }
          check:
            status: /200/
            jsonpath:
              name: test_config
              _locked: false
            schema:
              created_at: 
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              size:
                type: number
                    
      # Read - GET the created configuration
      - name: Get Test Configuration
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: GET
          check:
            status: /200/
            jsonpath:
              description: "Test collection for stepCI testing"
              versions[0].version: "1.0.0.1"
              versions[0].drop_indexes: []
              versions[0].migrations: []
              versions[0].add_indexes: []
              versions[0].test_data: "test_data.1.0.0.1.json"

      # Update - PUT to modify the configuration
      - name: Update Test Configuration
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: PUT
          headers:
            Content-Type: application/json
          body: |
            {
              "description": "Updated test collection for stepCI testing",
              "versions": [
                {
                  "version": "1.0.0.1",
                  "drop_indexes": [],
                  "migrations": [],
                  "add_indexes": [],
                  "test_data": "test_data.1.0.0.1.json"
                },
                {
                  "version": "1.0.1.2",
                  "drop_indexes": [],
                  "migrations": [],
                  "add_indexes": [],
                  "test_data": "test_data.1.0.1.2.json"
                }
              ]
            }
          check:
            status: /200/
            jsonpath:
              name: test_config
              _locked: false
            schema:
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              size:
                type: number

      # Lock - PUT to lock the configuration
      - name: Lock Test Configuration
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: PUT
          headers:
            Content-Type: application/json
          body: |
            {
              "description": "Updated test collection for stepCI testing",
              "versions": [
                {
                  "version": "1.0.0.1",
                  "drop_indexes": [],
                  "migrations": [],
                  "add_indexes": [],
                  "test_data": "test_data.1.0.0.1.json"
                },
                {
                  "version": "1.0.1.2",
                  "drop_indexes": [],
                  "migrations": [],
                  "add_indexes": [],
                  "test_data": "test_data.1.0.1.2.json"
                }
              ],
              "_locked": true
            }
          check:
            status: /200/
            jsonpath:
              name: test_config
              _locked: true

      # Try to Delete a locked configuration       
      - name: Delete a locked configuration - should fail
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: DELETE
          check:
            status: /500/
            jsonpath:
              status: FAILURE
              
      # Unlock - PUT to unlock the configuration
      - name: Unlock Test Configuration
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: PUT
          headers:
            Content-Type: application/json
          body: |
            {
              "description": "Updated test collection for stepCI testing",
              "versions": [
                {
                  "version": "1.0.0.1",
                  "drop_indexes": [],
                  "migrations": [],
                  "add_indexes": [],
                  "test_data": "test_data.1.0.0.1.json"
                },
                {
                  "version": "1.0.1.2",
                  "drop_indexes": [],
                  "migrations": [],
                  "add_indexes": [],
                  "test_data": "test_data.1.0.1.2.json"
                }
              ],
              "_locked": false
            }
          check:
            status: /200/
            jsonpath:
              name: test_config
              _locked: false
      
      # Lock All - PATCH to lock all configurations
      - name: Lock All Configurations
        http:
          url: http://${{env.host}}/api/configurations/
          method: PATCH
          check:
            status: /200/
            jsonpath:
              status: SUCCESS
              data.total_files: /[0-9]+/
              data.operation: "lock_all"
            schema:
              event_id:
                type: string
              event_type:
                type: string
              sub_events:
                type: array
      
      # Cleanup - DELETE the test configuration
      - name: Delete Test Configuration (Cleanup)
        http:
          url: http://${{env.host}}/api/configurations/test_config.yaml/
          method: DELETE
          check:
            status: /200/
      