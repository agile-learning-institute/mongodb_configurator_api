[
  {
    "error": "schema_not_found",
    "schema_name": "schema_name",
    "collection_name": "collection_name"
  },
  {
    "error": "invalid_enumerator_name",
    "name": "enumerator_name",
    "message": "Invalid enumerator name format"
  },
  {
    "error": "invalid_enumerator_status",
    "status": "status_value",
    "message": "Invalid enumerator status"
  },
  {
    "error": "invalid_enumerator_version",
    "version": "version_number",
    "message": "Invalid enumerator version number"
  },
  {
    "error": "invalid_enumerator_structure",
    "enumerator": "enumerator_name",
    "message": "Enumerator must be a dictionary"
  },
  {
    "error": "invalid_enumerator_value",
    "enumerator": "enumerator_name",
    "value": "value",
    "message": "Enumerator value must have a string description"
  },
  {
    "error": "invalid_schema_type",
    "path": "schema_path",
    "type": "invalid_type",
    "message": "Invalid type"
  },
  {
    "error": "missing_required_field",
    "path": "schema_path",
    "field": "field_name",
    "message": "Missing required field"
  },
  {
    "error": "invalid_object_properties",
    "path": "schema_path",
    "message": "Object type must have properties definition"
  },
  {
    "error": "invalid_array_items",
    "path": "schema_path",
    "message": "Array type must have items definition"
  },
  {
    "error": "invalid_enum_reference",
    "path": "schema_path",
    "type": "enum_type",
    "message": "Enum type must have enums reference"
  },
  {
    "error": "unknown_enumerator",
    "path": "schema_path",
    "enumerator": "enumerator_name",
    "version": "version_number",
    "message": "Unknown enumerator in version"
  },
  {
    "error": "invalid_one_of_type",
    "path": "schema_path",
    "message": "one_of type must have type_property definition"
  },
  {
    "error": "invalid_one_of_schemas",
    "path": "schema_path",
    "message": "one_of type must have schemas definition"
  },
  {
    "error": "invalid_schemas_value",
    "path": "schema_path",
    "message": "Invalid schemas value: must be a dictionary"
  },
  {
    "error": "invalid_primitive_type",
    "path": "type_path",
    "message": "Primitive type must have either 'schema' or both 'json_type' and 'bson_type' fields"
  },
  {
    "error": "invalid_json_type",
    "path": "type_path",
    "message": "Primitive type has invalid json_type: must be valid JSON"
  },
  {
    "error": "invalid_bson_type",
    "path": "type_path",
    "message": "Primitive type has invalid bson_type: must be valid JSON"
  },
  {
    "error": "invalid_schema_combination",
    "path": "type_path",
    "message": "Primitive type cannot have both 'schema' and *_type fields"
  }
]